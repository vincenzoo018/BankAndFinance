@model List<BankAndFinance.Models.Notification>

@{
    ViewBag.Title = "Notifications";
    Layout = "~/Views/Shared/_CustomerLayout.cshtml";
}

<style>
    .notification-item {
        background: white;
        border-radius: 12px;
        padding: 20px;
        margin-bottom: 12px;
        border-left: 4px solid #e2e8f0;
        display: flex;
        gap: 16px;
        align-items: start;
        transition: all 0.2s;
    }

    .notification-item:hover {
        box-shadow: 0 4px 12px rgba(0,0,0,0.1);
    }

    .notification-item.unread {
        background: #f0f9ff;
        border-left-color: #3b82f6;
    }

    .notification-icon {
        width: 48px;
        height: 48px;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 24px;
        flex-shrink: 0;
    }

    .notification-icon.success {
        background: linear-gradient(135deg, #10b981, #059669);
    }

    .notification-icon.info {
        background: linear-gradient(135deg, #3b82f6, #2563eb);
    }

    .notification-icon.warning {
        background: linear-gradient(135deg, #f59e0b, #d97706);
    }

    .notification-icon.error {
        background: linear-gradient(135deg, #ef4444, #dc2626);
    }

    .notification-content {
        flex: 1;
    }

    .notification-title {
        font-weight: 600;
        color: var(--text-primary);
        margin-bottom: 4px;
    }

    .notification-message {
        color: var(--text-secondary);
        font-size: 14px;
        margin-bottom: 8px;
    }

    .notification-time {
        color: var(--text-tertiary);
        font-size: 12px;
    }

    .notification-actions {
        display: flex;
        gap: 8px;
        align-items: center;
    }
</style>

<div class="card">
    <div class="card-header">
        <div class="card-title">üîî Notifications (@ViewBag.UnreadCount unread)</div>
        @if (ViewBag.UnreadCount > 0)
        {
            <form method="post" asp-action="MarkAllAsRead" style="display: inline;">
                <button type="submit" class="btn btn-outline">‚úÖ Mark All as Read</button>
            </form>
        }
    </div>
</div>

@if (Model != null && Model.Any())
{
    <div style="margin-top: 24px;">
        @foreach (var notification in Model)
        {
            <div class="notification-item @(!notification.IsRead ? "unread" : "")">
                <div class="notification-icon @(notification.Type?.ToLower() ?? "info")">
                    @switch (notification.Type?.ToLower())
                    {
                        case "success":
                            <span style="color: white;">‚úÖ</span>
                            break;
                        case "warning":
                            <span style="color: white;">‚ö†Ô∏è</span>
                            break;
                        case "error":
                            <span style="color: white;">‚ùå</span>
                            break;
                        default:
                            <span style="color: white;">‚ÑπÔ∏è</span>
                            break;
                    }
                </div>
                
                <div class="notification-content">
                    <div class="notification-title">@notification.Title</div>
                    <div class="notification-message">@notification.Message</div>
                    <div class="notification-time">
                        @{
                            var timeAgo = DateTime.Now - notification.CreatedAt;
                            var timeString = timeAgo.TotalMinutes < 1 ? "Just now" :
                                           timeAgo.TotalMinutes < 60 ? $"{(int)timeAgo.TotalMinutes}m ago" :
                                           timeAgo.TotalHours < 24 ? $"{(int)timeAgo.TotalHours}h ago" :
                                           $"{(int)timeAgo.TotalDays}d ago";
                        }
                        üïí @timeString
                    </div>
                </div>
                
                <div class="notification-actions">
                    @if (!notification.IsRead)
                    {
                        <form method="post" asp-action="MarkAsRead" style="display: inline;">
                            <input type="hidden" name="notificationId" value="@notification.NotificationId" />
                            <button type="submit" class="btn btn-outline" style="padding: 8px 16px; font-size: 13px;">
                                ‚úÖ Mark Read
                            </button>
                        </form>
                    }
                    <form method="post" asp-action="Delete" style="display: inline;">
                        <input type="hidden" name="notificationId" value="@notification.NotificationId" />
                        <button type="submit" class="btn btn-outline" style="padding: 8px 16px; font-size: 13px; color: #ef4444; border-color: #ef4444;">
                            üóëÔ∏è
                        </button>
                    </form>
                </div>
            </div>
        }
    </div>
}
else
{
    <div style="text-align: center; padding: 60px 20px; background: white; border-radius: 16px; margin-top: 24px;">
        <div style="font-size: 64px; margin-bottom: 20px;">üîî</div>
        <h3>No Notifications</h3>
        <p style="color: #64748b; margin: 16px 0;">You're all caught up! Notifications will appear here.</p>
    </div>
}
