@model IEnumerable<BankAndFinance.Models.User>

@{
    ViewBag.Title = "Customers";
    ViewBag.PageTitle = "Customer Management";
    ViewBag.Breadcrumb = "Home / Customers";
}

<div class="card fade-in">
    <div class="card-header">
        <div class="card-title">üë• All Customers</div>
        <div class="card-actions">
            <input type="text" id="searchBox" placeholder="üîç Search customers..." class="form-input" style="width: 250px;" onkeyup="searchTable()">
        </div>
    </div>
    
    <div class="table-container">
        <table id="usersTable">
            <thead>
                <tr>
                    <th>User ID</th>
                    <th>Full Name</th>
                    <th>Email</th>
                    <th>Role</th>
                    <th>Status</th>
                    <th>Created At</th>
                    <th style="text-align: center;">Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var user in Model)
                {
                    <tr>
                        <td><strong>#@user.UserId</strong></td>
                        <td>
                            <div style="display: flex; align-items: center; gap: 10px;">
                                <div class="user-avatar" style="width: 32px; height: 32px; font-size: 12px;">
                                    @user.FullName.Substring(0, 2).ToUpper()
                                </div>
                                <strong>@user.FullName</strong>
                            </div>
                        </td>
                        <td>@user.Email</td>
                        <td><span class="status-badge status-active">@user.Role?.RoleName</span></td>
                        <td><span class="status-badge status-@user.Status.ToLower()">@user.Status</span></td>
                        <td>@user.CreatedAt.ToString("MMM dd, yyyy")</td>
                        <td>
                            <div class="action-buttons" style="justify-content: center;">
                                <button class="btn-edit" onclick="editUser(@user.UserId, '@user.FullName', '@user.Email', @user.RoleId)">
                                    ‚úèÔ∏è Edit
                                </button>
                                @if (user.Status == "Active")
                                {
                                    <button class="btn-toggle inactive" onclick="toggleStatus(@user.UserId, 'Inactive')">
                                        ‚õî Deactivate
                                    </button>
                                }
                                else
                                {
                                    <button class="btn-toggle active" onclick="toggleStatus(@user.UserId, 'Active')">
                                        ‚úÖ Activate
                                    </button>
                                }
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

<!-- Edit User Modal -->
<div class="modal-overlay" id="editModal">
    <div class="modal">
        <div class="modal-header">
            <h3 class="modal-title">‚úèÔ∏è Edit User</h3>
            <button class="modal-close" onclick="closeModal()">&times;</button>
        </div>
        <form id="editForm" method="post" action="@Url.Action("UpdateUser", "Admin")">
            <input type="hidden" id="editUserId" name="userId">
            
            <div class="form-group">
                <label for="editFullName">Full Name</label>
                <input type="text" class="form-input" id="editFullName" name="fullName" required>
            </div>
            
            <div class="form-group">
                <label for="editEmail">Email Address</label>
                <input type="email" class="form-input" id="editEmail" name="email" required>
            </div>
            
            <div class="form-group">
                <label for="editRole">Role</label>
                <select class="form-select" id="editRole" name="roleId" required>
                    <option value="1">Admin</option>
                    <option value="2">Employee</option>
                    <option value="3">Customer</option>
                </select>
            </div>
            
            <div style="display: flex; gap: 12px; margin-top: 24px;">
                <button type="submit" class="btn btn-primary" style="flex: 1;">üíæ Save Changes</button>
                <button type="button" class="btn btn-outline" style="flex: 1;" onclick="closeModal()">Cancel</button>
            </div>
        </form>
    </div>
</div>

<script>
function editUser(userId, fullName, email, roleId) {
    document.getElementById('editUserId').value = userId;
    document.getElementById('editFullName').value = fullName;
    document.getElementById('editEmail').value = email;
    document.getElementById('editRole').value = roleId;
    document.getElementById('editModal').classList.add('active');
}

function closeModal() {
    document.getElementById('editModal').classList.remove('active');
}

function toggleStatus(userId, newStatus) {
    if (confirm(`Are you sure you want to ${newStatus === 'Active' ? 'activate' : 'deactivate'} this user?`)) {
        const form = document.createElement('form');
        form.method = 'POST';
        form.action = '@Url.Action("ToggleUserStatus", "Admin")';
        
        const userIdInput = document.createElement('input');
        userIdInput.type = 'hidden';
        userIdInput.name = 'userId';
        userIdInput.value = userId;
        
        const statusInput = document.createElement('input');
        statusInput.type = 'hidden';
        statusInput.name = 'status';
        statusInput.value = newStatus;
        
        form.appendChild(userIdInput);
        form.appendChild(statusInput);
        document.body.appendChild(form);
        form.submit();
    }
}

function searchTable() {
    const input = document.getElementById('searchBox');
    const filter = input.value.toUpperCase();
    const table = document.getElementById('usersTable');
    const tr = table.getElementsByTagName('tr');
    
    for (let i = 1; i < tr.length; i++) {
        let txtValue = tr[i].textContent || tr[i].innerText;
        if (txtValue.toUpperCase().indexOf(filter) > -1) {
            tr[i].style.display = '';
        } else {
            tr[i].style.display = 'none';
        }
    }
}

// Close modal when clicking outside
document.getElementById('editModal').addEventListener('click', function(e) {
    if (e.target === this) {
        closeModal();
    }
});
</script>
