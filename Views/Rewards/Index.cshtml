@model BankAndFinance.Models.Reward

@{
    ViewBag.Title = "Rewards";
    Layout = "~/Views/Shared/_CustomerLayout.cshtml";
}

<style>
    .tier-card {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        border-radius: 24px;
        padding: 40px;
        color: white;
        text-align: center;
        position: relative;
        overflow: hidden;
        margin-bottom: 32px;
    }

    .tier-card.bronze {
        background: linear-gradient(135deg, #cd7f32 0%, #b87333 100%);
    }

    .tier-card.silver {
        background: linear-gradient(135deg, #c0c0c0 0%, #a8a8a8 100%);
    }

    .tier-card.gold {
        background: linear-gradient(135deg, #ffd700 0%, #ffed4e 100%);
        color: #1e293b;
    }

    .tier-card.platinum {
        background: linear-gradient(135deg, #e5e4e2 0%, #b0b0b0 100%);
    }

    .tier-badge {
        font-size: 64px;
        margin-bottom: 16px;
    }

    .tier-name {
        font-size: 32px;
        font-weight: 700;
        margin-bottom: 8px;
    }

    .tier-subtitle {
        opacity: 0.9;
        font-size: 14px;
    }

    .stats-row {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
        gap: 20px;
        margin: 32px 0;
    }

    .stat-box {
        background: white;
        border-radius: 16px;
        padding: 24px;
        text-align: center;
        border: 2px solid #e2e8f0;
    }

    .stat-value {
        font-size: 36px;
        font-weight: 700;
        color: var(--primary);
        margin-bottom: 8px;
    }

    .stat-label {
        color: var(--text-secondary);
        font-size: 14px;
    }

    .tier-progress {
        margin: 32px 0;
    }

    .progress-label {
        display: flex;
        justify-content: space-between;
        margin-bottom: 12px;
        font-weight: 600;
    }

    .benefits-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
        gap: 16px;
        margin: 24px 0;
    }

    .benefit-item {
        background: white;
        border-radius: 12px;
        padding: 20px;
        border-left: 4px solid var(--primary);
    }

    @@media (max-width: 767px) {
        .stats-row {
            grid-template-columns: 1fr;
        }
    }
</style>

<!-- Tier Card -->
<div class="tier-card @Model.Tier.ToLower()">
    <div class="tier-badge">
        @switch (Model.Tier)
        {
            case "Bronze":
                <span>ü•â</span>
                break;
            case "Silver":
                <span>ü•à</span>
                break;
            case "Gold":
                <span>ü•á</span>
                break;
            case "Platinum":
                <span>üíé</span>
                break;
        }
    </div>
    <div class="tier-name">@Model.Tier Member</div>
    <div class="tier-subtitle">@(Model.CashbackRate * 100)% Cashback on all transactions</div>
</div>

<!-- Stats Row -->
<div class="stats-row">
    <div class="stat-box">
        <div class="stat-value">@Model.Points</div>
        <div class="stat-label">üèÜ Reward Points</div>
    </div>
    <div class="stat-box">
        <div class="stat-value">$@Model.CashbackEarned.ToString("N2")</div>
        <div class="stat-label">üí∞ Total Cashback Earned</div>
    </div>
    <div class="stat-box">
        <div class="stat-value">@Model.PointsToNextTier</div>
        <div class="stat-label">‚¨ÜÔ∏è Points to Next Tier</div>
    </div>
</div>

<!-- Redeem Points -->
<div class="card">
    <div class="card-header">
        <div class="card-title">üí≥ Redeem Points</div>
    </div>
    <div style="padding: 24px;">
        <div style="background: linear-gradient(135deg, #f0f9ff 0%, #e0f2fe 100%); padding: 24px; border-radius: 16px; margin-bottom: 24px;">
            <h4 style="margin: 0 0 12px 0; color: #0891b2;">üí° How It Works</h4>
            <p style="color: #475569; margin: 0;">100 points = $1.00 | You currently have @Model.Points points = $@((Model.Points / 100m).ToString("N2"))</p>
        </div>

        <form method="post" asp-action="RedeemPoints" onsubmit="return confirmRedeem()">
            <div class="form-group">
                <label for="points">Points to Redeem</label>
                <input type="number" class="form-input" id="points" name="points" min="100" max="@Model.Points" step="100" placeholder="Enter points (minimum 100)" style="font-size: 20px;">
                <small style="color: #64748b; display: block; margin-top: 8px;">
                    Available: @Model.Points points | Cash Value: $@((Model.Points / 100m).ToString("N2"))
                </small>
            </div>
            
            <button type="submit" class="btn btn-primary" style="width: 100%; padding: 16px; font-size: 16px;">
                üí∞ Redeem Points
            </button>
        </form>
    </div>
</div>

<!-- Tier Progress -->
<div class="card">
    <div class="card-header">
        <div class="card-title">üìà Your Progress</div>
    </div>
    <div style="padding: 24px;">
        <div class="tier-progress">
            <div class="progress-label">
                <span>Current Tier: @Model.Tier</span>
                <span>Next Tier: @(Model.Tier == "Bronze" ? "Silver (1,000 pts)" : Model.Tier == "Silver" ? "Gold (5,000 pts)" : Model.Tier == "Gold" ? "Platinum (10,000 pts)" : "Maximum Tier")</span>
            </div>
            <div class="progress-bar-container">
                @{
                    var progressPercent = Model.Tier == "Platinum" ? 100 : 
                                        Model.Tier == "Gold" ? ((Model.Points - 5000) / 50) :
                                        Model.Tier == "Silver" ? ((Model.Points - 1000) / 40) :
                                        (Model.Points / 10);
                }
                <div class="progress-bar-fill" style="width: @progressPercent%; background: linear-gradient(to right, var(--primary), var(--accent));"></div>
            </div>
        </div>
    </div>
</div>

<!-- Tier Benefits -->
<div class="card">
    <div class="card-header">
        <div class="card-title">üéÅ All Tier Benefits</div>
    </div>
    <div style="padding: 24px;">
        <div class="benefits-grid">
            <div class="benefit-item" style="border-color: #cd7f32;">
                <h4 style="margin: 0 0 12px 0; color: #cd7f32;">ü•â Bronze</h4>
                <ul style="color: #64748b; margin: 0; padding-left: 20px; font-size: 14px;">
                    <li>1% Cashback</li>
                    <li>Basic rewards</li>
                    <li>0-999 points</li>
                </ul>
            </div>
            
            <div class="benefit-item" style="border-color: #c0c0c0;">
                <h4 style="margin: 0 0 12px 0; color: #a8a8a8;">ü•à Silver</h4>
                <ul style="color: #64748b; margin: 0; padding-left: 20px; font-size: 14px;">
                    <li>1.5% Cashback</li>
                    <li>Priority support</li>
                    <li>1,000-4,999 points</li>
                </ul>
            </div>
            
            <div class="benefit-item" style="border-color: #ffd700;">
                <h4 style="margin: 0 0 12px 0; color: #d4af37;">ü•á Gold</h4>
                <ul style="color: #64748b; margin: 0; padding-left: 20px; font-size: 14px;">
                    <li>2% Cashback</li>
                    <li>Exclusive offers</li>
                    <li>5,000-9,999 points</li>
                </ul>
            </div>
            
            <div class="benefit-item" style="border-color: #e5e4e2;">
                <h4 style="margin: 0 0 12px 0; color: #7c7c7c;">üíé Platinum</h4>
                <ul style="color: #64748b; margin: 0; padding-left: 20px; font-size: 14px;">
                    <li>3% Cashback</li>
                    <li>VIP perks</li>
                    <li>10,000+ points</li>
                </ul>
            </div>
        </div>
    </div>
</div>

<!-- Recent Activity -->
@if (ViewBag.RecentTransactions != null)
{
    <div class="card">
        <div class="card-header">
            <div class="card-title">üí∏ Points Earned</div>
        </div>
        <div class="table-container">
            <table>
                <thead>
                    <tr>
                        <th>Date</th>
                        <th>Transaction</th>
                        <th>Amount</th>
                        <th>Points Earned</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var txn in ViewBag.RecentTransactions)
                    {
                        <tr>
                            <td>@txn.TransactionDate.ToString("MMM dd")</td>
                            <td>@txn.TransactionType</td>
                            <td>$@txn.Amount.ToString("N2")</td>
                            <td><strong style="color: var(--primary)">+@((int)txn.Amount) pts</strong></td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
}

<script>
function confirmRedeem() {
    const points = document.getElementById('points').value;
    if (!points || points < 100) {
        alert('Please enter at least 100 points');
        return false;
    }
    
    const cashValue = (points / 100).toFixed(2);
    return confirm(`Redeem ${points} points for $${cashValue}?`);
}
</script>
