@{
    ViewBag.Title = "Transfer";
    ViewBag.PageTitle = "Transfer Funds";
    ViewBag.Breadcrumb = "Home / Banking / Transfer";
}

<div class="card" style="max-width: 600px; margin: 0 auto;">
    <div class="card-header">
        <div class="card-title">Transfer Funds</div>
    </div>
    
    <div style="padding: 20px;">
        @if (ViewBag.Error != null)
        {
            <div class="error-message">
                @ViewBag.Error
            </div>
        }
        
        <div style="background: #f8fafc; padding: 20px; border-radius: 8px; margin-bottom: 20px;">
            <div style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 10px;">
                <span style="color: #64748b; font-size: 14px;">Your Account:</span>
                <strong style="color: #1e293b;">@ViewBag.AccountNumber</strong>
            </div>
            <div style="display: flex; justify-content: space-between; align-items: center;">
                <span style="color: #64748b; font-size: 14px;">Available Balance:</span>
                <strong style="color: #3dd598; font-size: 20px;">$@ViewBag.CurrentBalance?.ToString("N2")</strong>
            </div>
        </div>
        
        <form method="post" asp-action="Transfer" asp-controller="Customer" id="transferForm" onsubmit="return false;">
            <div class="form-group">
                <label for="receiverAccountNumber">Receiver Account Number</label>
                <input type="text" class="form-input" id="receiverAccountNumber" name="receiverAccountNumber" required placeholder="Enter receiver's account number" style="padding: 12px;">
            </div>
            
            <div class="form-group">
                <label for="amount">Transfer Amount</label>
                <input type="number" class="form-input" id="amount" name="amount" step="0.01" min="0.01" required placeholder="Enter amount to transfer" style="font-size: 18px; padding: 15px;">
            </div>

            <div class="form-group">
                <label for="cardId">Payment Card</label>
                @if (ViewBag.Cards != null && ((List<BankAndFinance.Models.Card>)ViewBag.Cards).Any())
                {
                    <select class="form-select" id="cardId" name="cardId" required style="padding: 12px;" onchange="updateCardBalance()">
                        <option value="">-- Select Payment Card --</option>
                        @foreach (var card in (List<BankAndFinance.Models.Card>)ViewBag.Cards)
                        {
                            var cardType = card.CardType == "Debit" ? "üí≥" : "üíé";
                            var lastFour = card.CardNumber.Substring(card.CardNumber.Length - 4);
                            <option value="@card.CardId" data-balance="@card.Balance">
                                @cardType @card.CardType - **** @lastFour (Balance: $@card.Balance.ToString("N2"))
                            </option>
                        }
                    </select>
                    <p style="color: #64748b; font-size: 13px; margin-top: 8px;">
                        ‚ÑπÔ∏è Transfer amount will be deducted from this card's balance
                    </p>
                    <div id="selectedCardBalance" style="display: none; background: #f0f9ff; border: 2px solid #3b82f6; border-radius: 8px; padding: 12px; margin-top: 12px;">
                        <div style="font-size: 13px; color: #1e40af;">Selected Card Balance:</div>
                        <div style="font-size: 20px; font-weight: 700; color: #2563eb; margin-top: 4px;" id="cardBalanceDisplay">$0.00</div>
                    </div>
                }
                else
                {
                    <div style="background: #fef3c7; border: 2px solid #f59e0b; border-radius: 8px; padding: 16px; margin-top: 10px;">
                        <p style="color: #92400e; margin: 0; font-weight: 500;">‚ö†Ô∏è No active cards found</p>
                        <p style="color: #78350f; margin: 8px 0 0 0; font-size: 14px;">
                            You need a card to make transfers. 
                            <a href="@Url.Action("MyCards", "Card")" style="color: #d97706; text-decoration: underline;">Request a card here</a>
                        </p>
                    </div>
                }
            </div>
            
            <div style="margin-top: 30px;">
                <button type="button" onclick="showTransferConfirmation()" class="btn-submit" style="width: 100%; padding: 15px; font-size: 16px; background: #8b5cf6;">üîÑ Transfer Funds</button>
                <a href="@Url.Action("Dashboard", "Customer")" class="btn-cancel" style="width: 100%; text-align: center; margin-top: 10px; display: block; padding: 12px;">Cancel</a>
            </div>
        </form>
    </div>
</div>

<!-- Confirmation Dialog -->
<div class="confirm-overlay" id="confirmOverlay">
    <div class="confirm-dialog">
        <div class="confirm-header" style="background: linear-gradient(135deg, #8b5cf6, #7c3aed);">
            <div class="confirm-icon">üîÑ</div>
            <div class="confirm-title">Confirm Transfer</div>
        </div>
        <div class="confirm-body">
            <div class="confirm-message">
                Are you sure you want to transfer this amount to the recipient?
            </div>
            <div class="confirm-details">
                <div class="confirm-detail-row">
                    <span class="confirm-detail-label">From Account:</span>
                    <span class="confirm-detail-value">@ViewBag.AccountNumber</span>
                </div>
                <div class="confirm-detail-row">
                    <span class="confirm-detail-label">To Account:</span>
                    <span class="confirm-detail-value" id="confirmReceiver">-</span>
                </div>
                <div class="confirm-detail-row">
                    <span class="confirm-detail-label">Available Balance:</span>
                    <span class="confirm-detail-value">$@ViewBag.CurrentBalance?.ToString("N2")</span>
                </div>
                <div class="confirm-detail-row">
                    <span class="confirm-detail-label">Transfer Amount:</span>
                    <span class="confirm-detail-value" id="confirmAmount" style="color: #8b5cf6;">$0.00</span>
                </div>
                <div class="confirm-detail-row">
                    <span class="confirm-detail-label">Remaining Balance:</span>
                    <span class="confirm-detail-value" id="confirmNewBalance" style="font-size: 16px;">$0.00</span>
                </div>
            </div>
        </div>
        <div class="confirm-actions">
            <button type="button" class="confirm-btn confirm-btn-yes" style="background: linear-gradient(135deg, #8b5cf6, #7c3aed);" onclick="submitTransfer()">‚úÖ Yes, Transfer</button>
            <button type="button" class="confirm-btn confirm-btn-no" onclick="closeConfirmation()">‚ùå Cancel</button>
        </div>
    </div>
</div>

<script>
function updateCardBalance() {
    const cardSelect = document.getElementById('cardId');
    const balanceDiv = document.getElementById('selectedCardBalance');
    const balanceDisplay = document.getElementById('cardBalanceDisplay');
    
    if (cardSelect.value) {
        const selectedOption = cardSelect.options[cardSelect.selectedIndex];
        const balance = selectedOption.getAttribute('data-balance');
        balanceDisplay.textContent = '$' + parseFloat(balance).toFixed(2);
        balanceDiv.style.display = 'block';
    } else {
        balanceDiv.style.display = 'none';
    }
}

function showTransferConfirmation() {
    const form = document.getElementById('transferForm');
    if (!form.checkValidity()) {
        form.reportValidity();
        return;
    }
    
    const cardSelect = document.getElementById('cardId');
    if (!cardSelect.value) {
        alert('Please select a payment card');
        return;
    }
    
    const amount = parseFloat(document.getElementById('amount').value);
    const selectedOption = cardSelect.options[cardSelect.selectedIndex];
    const cardBalance = parseFloat(selectedOption.getAttribute('data-balance'));
    const receiver = document.getElementById('receiverAccountNumber').value;
    const newBalance = cardBalance - amount;
    
    if (amount > cardBalance) {
        alert('Insufficient balance for this transfer.');
        return;
    }
    
    document.getElementById('confirmReceiver').textContent = receiver;
    document.getElementById('confirmAmount').textContent = '$' + amount.toFixed(2);
    document.getElementById('confirmNewBalance').textContent = '$' + newBalance.toFixed(2);
    document.getElementById('confirmOverlay').classList.add('active');
}

function closeConfirmation() {
    document.getElementById('confirmOverlay').classList.remove('active');
}

function submitTransfer() {
    const form = document.getElementById('transferForm');
    form.onsubmit = null;
    form.submit();
}

// Close on overlay click
document.getElementById('confirmOverlay')?.addEventListener('click', function(e) {
    if (e.target === this) {
        closeConfirmation();
    }
});
</script>
