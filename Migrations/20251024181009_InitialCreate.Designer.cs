// <auto-generated />
using System;
using BankAndFinance.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BankAndFinance.Migrations
{
    [DbContext(typeof(BFASDbContext))]
    [Migration("20251024181009_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BankAndFinance.Models.AccountNumberGenerator", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<long>("LastNumber")
                        .HasColumnType("bigint")
                        .HasColumnName("last_number");

                    b.HasKey("Id");

                    b.ToTable("account_number_generator");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            LastNumber = 100000000000L
                        });
                });

            modelBuilder.Entity("BankAndFinance.Models.AccountsPayable", b =>
                {
                    b.Property<int>("ApId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ap_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ApId"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("amount");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("due_date");

                    b.Property<string>("PayeeName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("payee_name");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("status");

                    b.HasKey("ApId");

                    b.HasIndex("CreatedBy");

                    b.ToTable("accounts_payable");
                });

            modelBuilder.Entity("BankAndFinance.Models.AccountsReceivable", b =>
                {
                    b.Property<int>("ArId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ar_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ArId"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("amount");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("due_date");

                    b.Property<string>("PayerName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("payer_name");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("status");

                    b.HasKey("ArId");

                    b.HasIndex("CreatedBy");

                    b.ToTable("accounts_receivable");
                });

            modelBuilder.Entity("BankAndFinance.Models.AuditLog", b =>
                {
                    b.Property<int>("LogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("log_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LogId"));

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("action");

                    b.Property<string>("Module")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("module");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2")
                        .HasColumnName("timestamp");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("LogId");

                    b.HasIndex("UserId");

                    b.ToTable("audit_logs");
                });

            modelBuilder.Entity("BankAndFinance.Models.BankAccount", b =>
                {
                    b.Property<int>("AccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("account_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AccountId"));

                    b.Property<string>("AccountNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("account_number");

                    b.Property<string>("AccountType")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("account_type");

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("balance");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("AccountId");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("bank_accounts");

                    b.HasData(
                        new
                        {
                            AccountId = 1,
                            AccountNumber = "BFAS-100000000001",
                            AccountType = "Savings",
                            Balance = 5000m,
                            CreatedAt = new DateTime(2025, 10, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 3
                        });
                });

            modelBuilder.Entity("BankAndFinance.Models.Biller", b =>
                {
                    b.Property<int>("BillerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("biller_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BillerId"));

                    b.Property<string>("BillerName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("biller_name");

                    b.Property<string>("BillerType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("biller_type");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.HasKey("BillerId");

                    b.ToTable("billers");

                    b.HasData(
                        new
                        {
                            BillerId = 1,
                            BillerName = "Electric Company",
                            BillerType = "Utility",
                            CreatedAt = new DateTime(2025, 10, 25, 2, 10, 9, 263, DateTimeKind.Local).AddTicks(3510)
                        },
                        new
                        {
                            BillerId = 2,
                            BillerName = "Water Company",
                            BillerType = "Utility",
                            CreatedAt = new DateTime(2025, 10, 25, 2, 10, 9, 263, DateTimeKind.Local).AddTicks(3512)
                        },
                        new
                        {
                            BillerId = 3,
                            BillerName = "Internet Provider",
                            BillerType = "Telecom",
                            CreatedAt = new DateTime(2025, 10, 25, 2, 10, 9, 263, DateTimeKind.Local).AddTicks(3514)
                        });
                });

            modelBuilder.Entity("BankAndFinance.Models.Branch", b =>
                {
                    b.Property<int>("BranchId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("branch_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BranchId"));

                    b.Property<string>("BranchName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("branch_name");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("location");

                    b.HasKey("BranchId");

                    b.ToTable("branch");

                    b.HasData(
                        new
                        {
                            BranchId = 1,
                            BranchName = "Main Branch",
                            Location = "Downtown City Center"
                        },
                        new
                        {
                            BranchId = 2,
                            BranchName = "North Branch",
                            Location = "North District"
                        });
                });

            modelBuilder.Entity("BankAndFinance.Models.CustomerProfile", b =>
                {
                    b.Property<int>("ProfileId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("profile_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProfileId"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("address");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime2")
                        .HasColumnName("date_of_birth");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("phone");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("ProfileId");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("customer_profiles");
                });

            modelBuilder.Entity("BankAndFinance.Models.FinancialStatement", b =>
                {
                    b.Property<int>("FsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("fs_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FsId"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<string>("Period")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("period");

                    b.Property<string>("StatementType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("statement_type");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("total_amount");

                    b.HasKey("FsId");

                    b.ToTable("financial_statements");
                });

            modelBuilder.Entity("BankAndFinance.Models.JournalEntry", b =>
                {
                    b.Property<int>("JournalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("journal_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("JournalId"));

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2")
                        .HasColumnName("date");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("description");

                    b.Property<string>("ReferenceNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("reference_number");

                    b.HasKey("JournalId");

                    b.HasIndex("CreatedBy");

                    b.ToTable("journal_entries");
                });

            modelBuilder.Entity("BankAndFinance.Models.JournalEntryLine", b =>
                {
                    b.Property<int>("LineId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("line_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LineId"));

                    b.Property<string>("AccountName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("account_name");

                    b.Property<decimal>("Credit")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("credit");

                    b.Property<decimal>("Debit")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("debit");

                    b.Property<int>("JournalId")
                        .HasColumnType("int")
                        .HasColumnName("journal_id");

                    b.HasKey("LineId");

                    b.HasIndex("JournalId");

                    b.ToTable("journal_entry_lines");
                });

            modelBuilder.Entity("BankAndFinance.Models.LedgerAccount", b =>
                {
                    b.Property<int>("LedgerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ledger_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LedgerId"));

                    b.Property<string>("AccountName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("account_name");

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("balance");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.HasKey("LedgerId");

                    b.ToTable("ledger_accounts");
                });

            modelBuilder.Entity("BankAndFinance.Models.Payment", b =>
                {
                    b.Property<int>("PaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("payment_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PaymentId"));

                    b.Property<int>("AccountId")
                        .HasColumnType("int")
                        .HasColumnName("account_id");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("amount");

                    b.Property<int>("BillerId")
                        .HasColumnType("int")
                        .HasColumnName("biller_id");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("payment_date");

                    b.Property<string>("ReferenceNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("reference_number");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("status");

                    b.HasKey("PaymentId");

                    b.HasIndex("AccountId");

                    b.HasIndex("BillerId");

                    b.ToTable("payments");
                });

            modelBuilder.Entity("BankAndFinance.Models.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("role_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"));

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("role_name");

                    b.HasKey("RoleId");

                    b.ToTable("roles");

                    b.HasData(
                        new
                        {
                            RoleId = 1,
                            RoleName = "Admin"
                        },
                        new
                        {
                            RoleId = 2,
                            RoleName = "Employee"
                        },
                        new
                        {
                            RoleId = 3,
                            RoleName = "Customer"
                        });
                });

            modelBuilder.Entity("BankAndFinance.Models.Transaction", b =>
                {
                    b.Property<int>("TransactionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("transaction_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TransactionId"));

                    b.Property<int>("AccountId")
                        .HasColumnType("int")
                        .HasColumnName("account_id");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("amount");

                    b.Property<string>("ReferenceNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("reference_number");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("status");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("transaction_date");

                    b.Property<string>("TransactionType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("transaction_type");

                    b.HasKey("TransactionId");

                    b.HasIndex("AccountId");

                    b.ToTable("transactions");
                });

            modelBuilder.Entity("BankAndFinance.Models.Transfer", b =>
                {
                    b.Property<int>("TransferId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("transfer_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TransferId"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("amount");

                    b.Property<int>("ReceiverAccountId")
                        .HasColumnType("int")
                        .HasColumnName("receiver_account_id");

                    b.Property<int>("SenderAccountId")
                        .HasColumnType("int")
                        .HasColumnName("sender_account_id");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("status");

                    b.Property<DateTime>("TransferDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("transfer_date");

                    b.HasKey("TransferId");

                    b.HasIndex("ReceiverAccountId");

                    b.HasIndex("SenderAccountId");

                    b.ToTable("transfers");
                });

            modelBuilder.Entity("BankAndFinance.Models.TrialBalance", b =>
                {
                    b.Property<int>("TrialId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("trial_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TrialId"));

                    b.Property<string>("AccountName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("account_name");

                    b.Property<decimal>("Credit")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("credit");

                    b.Property<decimal>("Debit")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("debit");

                    b.Property<string>("Period")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("period");

                    b.HasKey("TrialId");

                    b.ToTable("trial_balance");
                });

            modelBuilder.Entity("BankAndFinance.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("email");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("full_name");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("password");

                    b.Property<int>("RoleId")
                        .HasColumnType("int")
                        .HasColumnName("role_id");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("status");

                    b.HasKey("UserId");

                    b.HasIndex("RoleId");

                    b.ToTable("users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            CreatedAt = new DateTime(2025, 10, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "admin@bfassystem.com",
                            FullName = "Admin User",
                            Password = "Admin123",
                            RoleId = 1,
                            Status = "Active"
                        },
                        new
                        {
                            UserId = 2,
                            CreatedAt = new DateTime(2025, 10, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "employee@bfassystem.com",
                            FullName = "Employee User",
                            Password = "Emp123",
                            RoleId = 2,
                            Status = "Active"
                        },
                        new
                        {
                            UserId = 3,
                            CreatedAt = new DateTime(2025, 10, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "customer1@mail.com",
                            FullName = "Customer One",
                            Password = "Cust123",
                            RoleId = 3,
                            Status = "Active"
                        });
                });

            modelBuilder.Entity("BankAndFinance.Models.AccountsPayable", b =>
                {
                    b.HasOne("BankAndFinance.Models.User", "Creator")
                        .WithMany("AccountsPayables")
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Creator");
                });

            modelBuilder.Entity("BankAndFinance.Models.AccountsReceivable", b =>
                {
                    b.HasOne("BankAndFinance.Models.User", "Creator")
                        .WithMany("AccountsReceivables")
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Creator");
                });

            modelBuilder.Entity("BankAndFinance.Models.AuditLog", b =>
                {
                    b.HasOne("BankAndFinance.Models.User", "User")
                        .WithMany("AuditLogs")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("BankAndFinance.Models.BankAccount", b =>
                {
                    b.HasOne("BankAndFinance.Models.User", "User")
                        .WithOne("BankAccount")
                        .HasForeignKey("BankAndFinance.Models.BankAccount", "UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("BankAndFinance.Models.CustomerProfile", b =>
                {
                    b.HasOne("BankAndFinance.Models.User", "User")
                        .WithOne("CustomerProfile")
                        .HasForeignKey("BankAndFinance.Models.CustomerProfile", "UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("BankAndFinance.Models.JournalEntry", b =>
                {
                    b.HasOne("BankAndFinance.Models.User", "Creator")
                        .WithMany("JournalEntries")
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Creator");
                });

            modelBuilder.Entity("BankAndFinance.Models.JournalEntryLine", b =>
                {
                    b.HasOne("BankAndFinance.Models.JournalEntry", "JournalEntry")
                        .WithMany("JournalEntryLines")
                        .HasForeignKey("JournalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("JournalEntry");
                });

            modelBuilder.Entity("BankAndFinance.Models.Payment", b =>
                {
                    b.HasOne("BankAndFinance.Models.BankAccount", "BankAccount")
                        .WithMany("Payments")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("BankAndFinance.Models.Biller", "Biller")
                        .WithMany("Payments")
                        .HasForeignKey("BillerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("BankAccount");

                    b.Navigation("Biller");
                });

            modelBuilder.Entity("BankAndFinance.Models.Transaction", b =>
                {
                    b.HasOne("BankAndFinance.Models.BankAccount", "BankAccount")
                        .WithMany("Transactions")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("BankAccount");
                });

            modelBuilder.Entity("BankAndFinance.Models.Transfer", b =>
                {
                    b.HasOne("BankAndFinance.Models.BankAccount", "ReceiverAccount")
                        .WithMany("ReceivedTransfers")
                        .HasForeignKey("ReceiverAccountId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("BankAndFinance.Models.BankAccount", "SenderAccount")
                        .WithMany("SentTransfers")
                        .HasForeignKey("SenderAccountId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ReceiverAccount");

                    b.Navigation("SenderAccount");
                });

            modelBuilder.Entity("BankAndFinance.Models.User", b =>
                {
                    b.HasOne("BankAndFinance.Models.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("BankAndFinance.Models.BankAccount", b =>
                {
                    b.Navigation("Payments");

                    b.Navigation("ReceivedTransfers");

                    b.Navigation("SentTransfers");

                    b.Navigation("Transactions");
                });

            modelBuilder.Entity("BankAndFinance.Models.Biller", b =>
                {
                    b.Navigation("Payments");
                });

            modelBuilder.Entity("BankAndFinance.Models.JournalEntry", b =>
                {
                    b.Navigation("JournalEntryLines");
                });

            modelBuilder.Entity("BankAndFinance.Models.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("BankAndFinance.Models.User", b =>
                {
                    b.Navigation("AccountsPayables");

                    b.Navigation("AccountsReceivables");

                    b.Navigation("AuditLogs");

                    b.Navigation("BankAccount");

                    b.Navigation("CustomerProfile");

                    b.Navigation("JournalEntries");
                });
#pragma warning restore 612, 618
        }
    }
}
